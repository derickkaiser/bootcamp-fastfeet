{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedCond = createAnimatedCond;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _val = require(\"../val\");\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedBlock = require(\"../core/AnimatedBlock\");\n\nvar AnimatedCond = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedCond, _AnimatedNode);\n\n  function AnimatedCond(condition, ifBlock, elseBlock) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedCond);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedCond).call(this, {\n      type: 'cond',\n      cond: condition.__nodeID,\n      ifBlock: ifBlock.__nodeID,\n      elseBlock: elseBlock ? elseBlock.__nodeID : undefined\n    }, [condition, ifBlock, elseBlock]));\n    _this._condition = condition;\n    _this._ifBlock = ifBlock;\n    _this._elseBlock = elseBlock;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedCond, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      if ((0, _val.val)(this._condition)) {\n        return (0, _val.val)(this._ifBlock);\n      } else {\n        return this._elseBlock !== undefined ? (0, _val.val)(this._elseBlock) : undefined;\n      }\n    }\n  }]);\n  return AnimatedCond;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedCond(cond, ifBlock, elseBlock) {\n  return new AnimatedCond((0, _AnimatedBlock.adapt)(cond), (0, _AnimatedBlock.adapt)(ifBlock), elseBlock === undefined ? undefined : (0, _AnimatedBlock.adapt)(elseBlock));\n}","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/react-native-reanimated/src/core/AnimatedCond.js"],"names":["AnimatedCond","condition","ifBlock","elseBlock","type","cond","__nodeID","undefined","_condition","_ifBlock","_elseBlock","AnimatedNode","createAnimatedCond"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,Y;;;AAKJ,wBAAYC,SAAZ,EAAuBC,OAAvB,EAAgCC,SAAhC,EAA2C;AAAA;;AAAA;AACzC,kHACE;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,QAFlB;AAGEJ,MAAAA,OAAO,EAAEA,OAAO,CAACI,QAHnB;AAIEH,MAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAACG,QAAb,GAAwBC;AAJ9C,KADF,EAOE,CAACN,SAAD,EAAYC,OAAZ,EAAqBC,SAArB,CAPF;AASA,UAAKK,UAAL,GAAkBP,SAAlB;AACA,UAAKQ,QAAL,GAAgBP,OAAhB;AACA,UAAKQ,UAAL,GAAkBP,SAAlB;AAZyC;AAa1C;;;;mCAEc;AACb,UAAI,cAAI,KAAKK,UAAT,CAAJ,EAA0B;AACxB,eAAO,cAAI,KAAKC,QAAT,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKC,UAAL,KAAoBH,SAApB,GAAgC,cAAI,KAAKG,UAAT,CAAhC,GAAuDH,SAA9D;AACD;AACF;;;EA1BwBI,sB;;AA6BpB,SAASC,kBAAT,CAA4BP,IAA5B,EAAkCH,OAAlC,EAA2CC,SAA3C,EAAsD;AAC3D,SAAO,IAAIH,YAAJ,CACL,0BAAMK,IAAN,CADK,EAEL,0BAAMH,OAAN,CAFK,EAGLC,SAAS,KAAKI,SAAd,GAA0BA,SAA1B,GAAsC,0BAAMJ,SAAN,CAHjC,CAAP;AAKD","sourcesContent":["import { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport { adapt } from '../core/AnimatedBlock';\n\nclass AnimatedCond extends AnimatedNode {\n  _condition;\n  _ifBlock;\n  _elseBlock;\n\n  constructor(condition, ifBlock, elseBlock) {\n    super(\n      {\n        type: 'cond',\n        cond: condition.__nodeID,\n        ifBlock: ifBlock.__nodeID,\n        elseBlock: elseBlock ? elseBlock.__nodeID : undefined,\n      },\n      [condition, ifBlock, elseBlock]\n    );\n    this._condition = condition;\n    this._ifBlock = ifBlock;\n    this._elseBlock = elseBlock;\n  }\n\n  __onEvaluate() {\n    if (val(this._condition)) {\n      return val(this._ifBlock);\n    } else {\n      return this._elseBlock !== undefined ? val(this._elseBlock) : undefined;\n    }\n  }\n}\n\nexport function createAnimatedCond(cond, ifBlock, elseBlock) {\n  return new AnimatedCond(\n    adapt(cond),\n    adapt(ifBlock),\n    elseBlock === undefined ? undefined : adapt(elseBlock)\n  );\n}\n"]},"metadata":{},"sourceType":"script"}