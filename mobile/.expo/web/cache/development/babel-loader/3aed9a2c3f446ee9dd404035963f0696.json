{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedConcat = createAnimatedConcat;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedBlock = require(\"../core/AnimatedBlock\");\n\nvar _val = require(\"../val\");\n\nvar AnimatedConcat = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedConcat, _AnimatedNode);\n\n  function AnimatedConcat(input) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedConcat);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedConcat).call(this, {\n      type: 'concat',\n      input: input.map(function (n) {\n        return n.__nodeID;\n      })\n    }, input));\n    _this._input = input;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedConcat, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._input.reduce(function (prev, current) {\n        return prev + (0, _val.val)(current);\n      }, '');\n    }\n  }]);\n  return AnimatedConcat;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedConcat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new AnimatedConcat(args.map(_AnimatedBlock.adapt));\n}","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/react-native-reanimated/src/core/AnimatedConcat.js"],"names":["AnimatedConcat","input","type","map","n","__nodeID","_input","reduce","prev","current","AnimatedNode","createAnimatedConcat","args","adapt"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,c;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,oHAAM;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,KAAK,EAAEA,KAAK,CAACE,GAAN,CAAU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,QAAN;AAAA,OAAX;AAAzB,KAAN,EAA6DJ,KAA7D;AACA,UAAKK,MAAL,GAAcL,KAAd;AAFiB;AAGlB;;;;mCAEc;AACb,aAAO,KAAKK,MAAL,CAAYC,MAAZ,CAAmB,UAACC,IAAD,EAAOC,OAAP;AAAA,eAAmBD,IAAI,GAAG,cAAIC,OAAJ,CAA1B;AAAA,OAAnB,EAA2D,EAA3D,CAAP;AACD;;;EAR0BC,sB;;AAWtB,SAASC,oBAAT,GAAuC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC5C,SAAO,IAAIZ,cAAJ,CAAmBY,IAAI,CAACT,GAAL,CAASU,oBAAT,CAAnB,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { adapt } from '../core/AnimatedBlock';\nimport { val } from '../val';\n\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    super({ type: 'concat', input: input.map(n => n.__nodeID) }, input);\n    this._input = input;\n  }\n\n  __onEvaluate() {\n    return this._input.reduce((prev, current) => prev + val(current), '');\n  }\n}\n\nexport function createAnimatedConcat(...args) {\n  return new AnimatedConcat(args.map(adapt));\n}\n"]},"metadata":{},"sourceType":"script"}