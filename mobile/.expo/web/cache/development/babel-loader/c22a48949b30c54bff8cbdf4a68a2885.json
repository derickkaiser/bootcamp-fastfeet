{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SignIn;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _navigation = _interopRequireDefault(require(\"../../services/navigation\"));\n\nvar _api = _interopRequireDefault(require(\"../../services/api\"));\n\nvar _logo = _interopRequireDefault(require(\"../../assets/logo.svg\"));\n\nvar _styles = require(\"./styles\");\n\nvar _jsxFileName = \"/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/src/pages/SignIn/index.js\";\n\nfunction SignIn() {\n  var passwordRef = (0, _react.useRef)();\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      deliverymanId = _useState2[0],\n      setDeliverymanId = _useState2[1];\n\n  function handleSubmit() {\n    var _await$api$get, data, deliveryman;\n\n    return _regenerator.default.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_api.default.get('/deliverymen'));\n\n          case 2:\n            _await$api$get = _context.sent;\n            data = _await$api$get.data;\n            deliveryman = data.find(function (d) {\n              return d.id == deliverymanId;\n            });\n\n            if (deliveryman) {\n              _context.next = 8;\n              break;\n            }\n\n            _reactNative.Alert.alert('Não existe entregador cadastrado com este id.');\n\n            return _context.abrupt(\"return\");\n\n          case 8:\n            _navigation.default.navigate('Dashboard', {\n              deliveryman: deliveryman\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return _react.default.createElement(_styles.Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }, _react.default.createElement(_styles.LogoView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: _logo.default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  })), _react.default.createElement(_styles.Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    }\n  }, _react.default.createElement(_styles.FormInput, {\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    placeholder: \"Informe seu ID de cadastro\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordRef.current.focus();\n    },\n    value: deliverymanId,\n    onChangeText: setDeliverymanId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    }\n  }), _react.default.createElement(_styles.SubmitButton, {\n    color: \"#82BF18\",\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }, \"Entrar no sistema\")));\n}","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/src/pages/SignIn/index.js"],"names":["SignIn","passwordRef","deliverymanId","setDeliverymanId","handleSubmit","api","get","data","deliveryman","find","d","id","Alert","alert","NavigationService","navigate","logo","current","focus"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;AAEe,SAASA,MAAT,GAAkB;AAC/B,MAAMC,WAAW,GAAG,oBAApB;;AAD+B,kBAEW,qBAAS,EAAT,CAFX;AAAA;AAAA,MAExBC,aAFwB;AAAA,MAETC,gBAFS;;AAI/B,WAAeC,YAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACuBC,aAAIC,GAAJ,CAAQ,cAAR,CADvB;;AAAA;AAAA;AACSC,YAAAA,IADT,kBACSA,IADT;AAGQC,YAAAA,WAHR,GAGsBD,IAAI,CAACE,IAAL,CAAU,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,EAAF,IAAQT,aAAZ;AAAA,aAAX,CAHtB;;AAAA,gBAKMM,WALN;AAAA;AAAA;AAAA;;AAMII,+BAAMC,KAAN,CAAY,+CAAZ;;AANJ;;AAAA;AAUEC,gCAAkBC,QAAlB,CAA2B,WAA3B,EAAwC;AAACP,cAAAA,WAAW,EAAXA;AAAD,aAAxC;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AAAO,IAAA,MAAM,EAAEQ,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AACE,IAAA,WAAW,EAAE,KADf;AAEE,IAAA,cAAc,EAAC,MAFjB;AAGE,IAAA,WAAW,EAAC,4BAHd;AAIE,IAAA,eAAe,EAAE;AAAA,aAAMf,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,EAAN;AAAA,KAJnB;AAKE,IAAA,KAAK,EAAEhB,aALT;AAME,IAAA,YAAY,EAAEC,gBANhB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,6BAAC,oBAAD;AAAc,IAAA,KAAK,EAAC,SAApB;AAA8B,IAAA,OAAO,EAAEC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVF,CAJF,CADF;AAqBD","sourcesContent":["import React, {useState, useRef} from 'react';\nimport {Image, Alert} from 'react-native';\nimport NavigationService from '../../services/navigation';\nimport api from '../../services/api';\n\nimport logo from '../../assets/logo.svg';\n\nimport {Container, LogoView, Form, FormInput, SubmitButton} from './styles';\n\nexport default function SignIn() {\n  const passwordRef = useRef();\n  const [deliverymanId, setDeliverymanId] = useState('');\n\n  async function handleSubmit() {\n    const {data} = await api.get('/deliverymen');\n\n    const deliveryman = data.find(d => d.id == deliverymanId);\n\n    if(!deliveryman){\n      Alert.alert('Não existe entregador cadastrado com este id.');\n      return;\n    }\n\n    NavigationService.navigate('Dashboard', {deliveryman});\n  }\n\n  return (\n    <Container>\n      <LogoView>\n        <Image source={logo} />\n      </LogoView>\n      <Form>\n        <FormInput\n          autoCorrect={false}\n          autoCapitalize=\"none\"\n          placeholder=\"Informe seu ID de cadastro\"\n          onSubmitEditing={() => passwordRef.current.focus()}\n          value={deliverymanId}\n          onChangeText={setDeliverymanId}\n        />\n\n        <SubmitButton color=\"#82BF18\" onPress={handleSubmit}>\n          Entrar no sistema\n        </SubmitButton>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}