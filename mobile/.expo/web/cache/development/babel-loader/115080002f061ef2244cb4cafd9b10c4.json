{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _dateFns = require(\"date-fns\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _reactNavigation = require(\"react-navigation\");\n\nvar _navigation = _interopRequireDefault(require(\"../../services/navigation\"));\n\nvar _Header = _interopRequireDefault(require(\"../../components/Header\"));\n\nvar _Background = _interopRequireDefault(require(\"../../components/Background\"));\n\nvar _DeliveryItem = _interopRequireDefault(require(\"../../components/DeliveryItem\"));\n\nvar _api = _interopRequireDefault(require(\"../../services/api\"));\n\nvar _styles = require(\"./styles\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _jsxFileName = \"/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/src/pages/Dashboard/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Dashboard(_ref) {\n  var navigation = _ref.navigation,\n      isFocused = _ref.isFocused;\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isPending = _useState2[0],\n      setIsPending = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      deliveries = _useState4[0],\n      setDeliveries = _useState4[1];\n\n  var deliveryman;\n\n  if (navigation.getParam('deliveryman')) {\n    deliveryman = navigation.getParam('deliveryman');\n  }\n\n  (0, _react.useEffect)(function () {\n    function loadDeliveries() {\n      var deliveriesList, _await$api$get, data, _await$api$get2, _data;\n\n      return _regenerator.default.async(function loadDeliveries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isPending) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return _regenerator.default.awrap(_api.default.get(\"/deliveryman/\" + deliveryman.id + \"/deliveries\"));\n\n            case 3:\n              _await$api$get = _context.sent;\n              data = _await$api$get.data;\n              deliveriesList = data;\n              _context.next = 13;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return _regenerator.default.awrap(_api.default.get(\"/deliveryman/\" + deliveryman.id + \"/delivered_deliveries\"));\n\n            case 10:\n              _await$api$get2 = _context.sent;\n              _data = _await$api$get2.data;\n              deliveriesList = _data;\n\n            case 13:\n              setDeliveries(deliveriesList.map(function (d) {\n                return _objectSpread({}, d, {\n                  createdFormattedDate: d.createdAt ? (0, _dateFns.format)((0, _dateFns.parseISO)(d.createdAt), 'dd/MM/yyyy') : '--/--/----',\n                  endFormattedDate: d.end_date ? (0, _dateFns.format)((0, _dateFns.parseISO)(d.end_date), 'dd/MM/yyyy') : '--/--/----',\n                  canceledFormattedDate: d.canceled_at ? (0, _dateFns.format)((0, _dateFns.parseISO)(d.canceled_at), 'dd/MM/yyyy') : '--/--/----',\n                  startFormattedDate: d.start_date ? (0, _dateFns.format)((0, _dateFns.parseISO)(d.start_date), 'dd/MM/yyyy') : '--/--/----'\n                });\n              }));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    if (isFocused) {\n      loadDeliveries();\n    }\n  }, [isPending, isFocused]);\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_Header.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }), _react.default.createElement(_Background.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    }\n  }, _react.default.createElement(_styles.Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }, _react.default.createElement(_styles.MyProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    }\n  }, _react.default.createElement(_styles.ProfileImage, {\n    source: {\n      uri: deliveryman.avatar.url\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  }), _react.default.createElement(_styles.ProfileInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    }\n  }, _react.default.createElement(_styles.WelcomeText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    }\n  }, \"Bem-vindo de volta,\"), _react.default.createElement(_styles.LabelValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    }\n  }, deliveryman.name)), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    onPress: function onPress() {\n      return _navigation.default.navigate('SignIn');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    }\n  }, _react.default.createElement(_MaterialIcons.default, {\n    name: \"exit-to-app\",\n    size: 20,\n    color: \"#E74040\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    }\n  })))), _react.default.createElement(_styles.HeaderList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    }\n  }, _react.default.createElement(_styles.LabelValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }, \"Entregas\"), _react.default.createElement(_styles.DeliverFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    }\n  }, _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    onPress: function onPress() {\n      return setIsPending(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    }\n  }, _react.default.createElement(_styles.DeliverFilterPending, {\n    isPending: isPending,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    }\n  }, \"Pendentes\")), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    onPress: function onPress() {\n      return setIsPending(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    }\n  }, _react.default.createElement(_styles.DeliverFilterDelivered, {\n    isPending: isPending,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    }\n  }, \"Entregues\")))), deliveries.length === 0 ? _react.default.createElement(_styles.EmptyDeliveries, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    }\n  }, _react.default.createElement(_styles.EmptyDeliveriesText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    }\n  }, \"N\\xE3o existem entregas para este filtro.\")) : _react.default.createElement(_styles.DeliveryList, {\n    data: deliveries,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    initialNumToRender: 50,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_DeliveryItem.default, {\n        delivery: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    }\n  }))));\n}\n\nDashboard.navigationOptions = {\n  headerShown: false\n};\n\nvar _default = (0, _reactNavigation.withNavigationFocus)(Dashboard);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/src/pages/Dashboard/index.js"],"names":["Dashboard","navigation","isFocused","isPending","setIsPending","deliveries","setDeliveries","deliveryman","getParam","loadDeliveries","api","get","id","data","deliveriesList","map","d","createdFormattedDate","createdAt","endFormattedDate","end_date","canceledFormattedDate","canceled_at","startFormattedDate","start_date","uri","avatar","url","name","NavigationService","navigate","length","item","String","navigationOptions","headerShown"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Text} from 'react-native';\nimport {parseISO, format} from 'date-fns';\n\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nimport {withNavigationFocus} from 'react-navigation';\n\nimport NavigationService from '../../services/navigation';\n\nimport Header from '../../components/Header';\nimport Background from '../../components/Background';\nimport DeliveryItem from '../../components/DeliveryItem';\n\nimport api from '../../services/api';\n\nimport {\n  Container,\n  MyProfile,\n  ProfileImage,\n  ProfileInfo,\n  LabelValue,\n  WelcomeText,\n  HeaderList,\n  DeliverFilter,\n  DeliverFilterPending,\n  DeliverFilterDelivered,\n  DeliveryList,\n  EmptyDeliveries,\n  EmptyDeliveriesText,\n} from './styles';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nfunction Dashboard({navigation, isFocused}) {\n  const [isPending, setIsPending] = useState(true);\n  const [deliveries, setDeliveries] = useState([]);\n\n  let deliveryman;\n\n  if (navigation.getParam('deliveryman')) {\n    deliveryman = navigation.getParam('deliveryman');\n  }\n\n  useEffect(() => {\n    async function loadDeliveries() {\n      let deliveriesList;\n      if (isPending) {\n        const {data} = await api.get(\n          `/deliveryman/${deliveryman.id}/deliveries`,\n        );\n        deliveriesList = data;\n      } else {\n        const {data} = await api.get(\n          `/deliveryman/${deliveryman.id}/delivered_deliveries`,\n        );\n        deliveriesList = data;\n      }\n\n      setDeliveries(\n        deliveriesList.map(d => ({\n          ...d,\n          createdFormattedDate: d.createdAt\n            ? format(parseISO(d.createdAt), 'dd/MM/yyyy')\n            : '--/--/----',\n          endFormattedDate: d.end_date\n            ? format(parseISO(d.end_date), 'dd/MM/yyyy')\n            : '--/--/----',\n          canceledFormattedDate: d.canceled_at\n            ? format(parseISO(d.canceled_at), 'dd/MM/yyyy')\n            : '--/--/----',\n          startFormattedDate: d.start_date\n            ? format(parseISO(d.start_date), 'dd/MM/yyyy')\n            : '--/--/----',\n        })),\n      );\n    }\n    if (isFocused) {\n      loadDeliveries();\n    }\n  }, [isPending, isFocused]); //eslint-disable-line\n\n  return (\n    <>\n      <Header />\n      <Background>\n        <Container>\n          <MyProfile>\n            <ProfileImage source={{ uri: deliveryman.avatar.url}} />\n            <ProfileInfo>\n              <WelcomeText>\n                <Text>Bem-vindo de volta,</Text>\n                <LabelValue>{deliveryman.name}</LabelValue>\n              </WelcomeText>\n              <TouchableOpacity\n                onPress={() => NavigationService.navigate('SignIn')}>\n                <Icon name=\"exit-to-app\" size={20} color=\"#E74040\" />\n              </TouchableOpacity>\n            </ProfileInfo>\n          </MyProfile>\n          <HeaderList>\n            <LabelValue>Entregas</LabelValue>\n            <DeliverFilter>\n              <TouchableOpacity onPress={() => setIsPending(true)}>\n                <DeliverFilterPending isPending={isPending}>\n                  Pendentes\n                </DeliverFilterPending>\n              </TouchableOpacity>\n              <TouchableOpacity onPress={() => setIsPending(false)}>\n                <DeliverFilterDelivered isPending={isPending}>\n                  Entregues\n                </DeliverFilterDelivered>\n              </TouchableOpacity>\n            </DeliverFilter>\n          </HeaderList>\n          {deliveries.length === 0 ? \n          (\n            <EmptyDeliveries>\n              <EmptyDeliveriesText>Não existem entregas para este filtro.</EmptyDeliveriesText>\n            </EmptyDeliveries>) : \n          (<DeliveryList\n            data={deliveries}\n            keyExtractor={item => String(item.id)}\n            initialNumToRender={50}\n            renderItem={({item}) => <DeliveryItem delivery={item} />}\n          />)}\n          \n        </Container>\n      </Background>\n    </>\n  );\n}\n\nDashboard.navigationOptions = {\n  headerShown: false,\n};\n\nexport default withNavigationFocus(Dashboard);\n"]},"metadata":{},"sourceType":"script"}