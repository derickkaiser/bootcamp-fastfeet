{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireDefault(require(\"react-native-reanimated\"));\n\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/views/CrossFadeIcon.tsx\";\n\nvar TabBarIcon = function (_React$Component) {\n  (0, _inherits2.default)(TabBarIcon, _React$Component);\n\n  function TabBarIcon() {\n    (0, _classCallCheck2.default)(this, TabBarIcon);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TabBarIcon).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(TabBarIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          activeOpacity = _this$props.activeOpacity,\n          inactiveOpacity = _this$props.inactiveOpacity,\n          activeTintColor = _this$props.activeTintColor,\n          inactiveTintColor = _this$props.inactiveTintColor,\n          renderIcon = _this$props.renderIcon,\n          horizontal = _this$props.horizontal,\n          style = _this$props.style;\n      return _react.default.createElement(_reactNative.View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, _react.default.createElement(_reactNativeReanimated.default.View, {\n        style: [styles.icon, {\n          opacity: activeOpacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, renderIcon({\n        route: route,\n        focused: true,\n        horizontal: horizontal,\n        tintColor: activeTintColor\n      })), _react.default.createElement(_reactNativeReanimated.default.View, {\n        style: [styles.icon, {\n          opacity: inactiveOpacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }, renderIcon({\n        route: route,\n        focused: false,\n        horizontal: horizontal,\n        tintColor: inactiveTintColor\n      })));\n    }\n  }]);\n  return TabBarIcon;\n}(_react.default.Component);\n\nexports.default = TabBarIcon;\n\nvar styles = _reactNative.StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["TabBarIcon","React","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","opacity","focused","tintColor","StyleSheet","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAmBqBA,IAAAA,U;;;;;;;;;;6BACV;AAAA,UAAA,WAAA,GAUH,KAVG,KAAA;AAAA,UAELE,KAFK,GAAA,WAAA,CAAA,KAAA;AAAA,UAGLC,aAHK,GAAA,WAAA,CAAA,aAAA;AAAA,UAILC,eAJK,GAAA,WAAA,CAAA,eAAA;AAAA,UAKLC,eALK,GAAA,WAAA,CAAA,eAAA;AAAA,UAMLC,iBANK,GAAA,WAAA,CAAA,iBAAA;AAAA,UAOLC,UAPK,GAAA,WAAA,CAAA,UAAA;AAAA,UAQLC,UARK,GAAA,WAAA,CAAA,UAAA;AAAA,UASLC,KATK,GAAA,WAAA,CAAA,KAAA;AAcP,aACE,eAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,QAAA,KAAK,EAAX,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACE,eAAA,aAAA,CAAA,+BAAA,IAAA,EAAA;AAAe,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAc;AAAEC,UAAAA,OAAO,EAA7C;AAAoC,SAAd,CAAtB;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACGJ,UAAU,CAAC;AACVL,QAAAA,KAAK,EADK,KAAA;AAEVU,QAAAA,OAAO,EAFG,IAAA;AAGVJ,QAAAA,UAAU,EAHA,UAAA;AAIVK,QAAAA,SAAS,EANf;AAEgB,OAAD,CADb,CADF,EASE,eAAA,aAAA,CAAA,+BAAA,IAAA,EAAA;AAAe,QAAA,KAAK,EAAE,CAACH,MAAM,CAAP,IAAA,EAAc;AAAEC,UAAAA,OAAO,EAA7C;AAAoC,SAAd,CAAtB;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACGJ,UAAU,CAAC;AACVL,QAAAA,KAAK,EADK,KAAA;AAEVU,QAAAA,OAAO,EAFG,KAAA;AAGVJ,QAAAA,UAAU,EAHA,UAAA;AAIVK,QAAAA,SAAS,EAfjB;AAWkB,OAAD,CADb,CATF,CADF;;;;EAfoCZ,eAAnBD,S,CAAAA;;;;AAsCrB,IAAMU,MAAM,GAAGI,wBAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AAIJC,IAAAA,QAAQ,EAJJ,UAAA;AAKJC,IAAAA,SAAS,EALL,QAAA;AAMJC,IAAAA,UAAU,EANN,QAAA;AAOJC,IAAAA,cAAc,EAPV,QAAA;AAQJC,IAAAA,MAAM,EARF,MAAA;AASJC,IAAAA,KAAK,EATD,MAAA;AAWJC,IAAAA,QAAQ,EAZZ;AACQ;AADyB,CAAlBR,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\n\ntype Props = {\n  route: NavigationRoute;\n  horizontal?: boolean;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  renderIcon: (props: {\n    route: NavigationRoute;\n    focused: boolean;\n    tintColor?: string;\n    horizontal?: boolean;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}