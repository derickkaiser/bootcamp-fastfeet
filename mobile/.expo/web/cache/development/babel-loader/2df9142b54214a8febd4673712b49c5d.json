{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ViewProblem;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _dateFns = require(\"date-fns\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _Header = _interopRequireDefault(require(\"../../components/Header\"));\n\nvar _api = _interopRequireDefault(require(\"../../services/api\"));\n\nvar _styles = require(\"./styles\");\n\nvar _jsxFileName = \"/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/src/pages/ViewProblem/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction ViewProblem(_ref) {\n  var navigation = _ref.navigation;\n  var delivery = navigation.getParam('delivery');\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      problems = _useState2[0],\n      setProblems = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    function loadProblems() {\n      var _await$api$get, data, problemList;\n\n      return _regenerator.default.async(function loadProblems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_api.default.get(\"/delivery/\" + delivery.id + \"/problems\"));\n\n            case 2:\n              _await$api$get = _context.sent;\n              data = _await$api$get.data;\n              console.tron.log(data);\n              problemList = data.map(function (p) {\n                return _objectSpread({}, p, {\n                  createdFormattedDate: (0, _dateFns.format)((0, _dateFns.parseISO)(p.createdAt), 'dd/MM/yyyy')\n                });\n              });\n              console.tron.log(problemList);\n              setProblems(problemList);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    loadProblems();\n  }, [delivery.id]);\n  return _react.default.createElement(_styles.Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, _react.default.createElement(_styles.TitleView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }, _react.default.createElement(_styles.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    }\n  }, delivery.product_name)), problems.length === 0 ? _react.default.createElement(_styles.NoProblemView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }, _react.default.createElement(_styles.NoProblemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, \"N\\xE3o existem problemas cadastrados para esta entrega.\")) : _react.default.createElement(_reactNative.FlatList, {\n    data: problems,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    initialNumToRender: 50,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_styles.Problem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, _react.default.createElement(_styles.ProblemText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, item.description), _react.default.createElement(_styles.Date, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, item.createdFormattedDate));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }));\n}\n\nViewProblem.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  return {\n    headerTitle: function headerTitle() {\n      return _react.default.createElement(_Header.default, {\n        title: \"Visualizar problemas\",\n        border: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      });\n    },\n    headerLeft: function headerLeft() {\n      return _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, _react.default.createElement(_MaterialIcons.default, {\n        name: \"chevron-left\",\n        size: 20,\n        color: \"#000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/src/pages/ViewProblem/index.js"],"names":["ViewProblem","navigation","delivery","getParam","problems","setProblems","loadProblems","api","get","id","data","console","tron","log","problemList","map","p","createdFormattedDate","createdAt","product_name","length","item","String","description","navigationOptions","headerTitle","headerLeft","goBack"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {FlatList} from 'react-native';\nimport {format, parseISO} from 'date-fns';\n\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nimport Header from '../../components/Header';\nimport api from '../../services/api';\n\nimport {\n  Container,\n  Title,\n  TitleView,\n  Problem,\n  ProblemText,\n  Date,\n  NoProblemView,\n  NoProblemText,\n} from './styles';\n\nexport default function ViewProblem({navigation}) {\n  const delivery = navigation.getParam('delivery');\n  const [problems, setProblems] = useState([]);\n\n  useEffect(() => {\n    async function loadProblems() {\n      const {data} = await api.get(`/delivery/${delivery.id}/problems`);\n\n      console.tron.log(data);\n\n      const problemList = data.map(p => ({\n        ...p,\n        createdFormattedDate: format(parseISO(p.createdAt), 'dd/MM/yyyy'),\n      }));\n\n      console.tron.log(problemList);\n\n      setProblems(problemList);\n    }\n    loadProblems();\n  }, [delivery.id]);\n\n  return (\n    <Container>\n      <TitleView>\n        <Title>{delivery.product_name}</Title>\n      </TitleView>\n      {problems.length === 0 ?\n        (\n          <NoProblemView>\n            <NoProblemText>Não existem problemas cadastrados para esta entrega.</NoProblemText>\n          </NoProblemView>\n        ) :\n        (\n        <FlatList\n          data={problems}\n          keyExtractor={item => String(item.id)}\n          initialNumToRender={50}\n          renderItem={({item}) => (\n            <Problem>\n              <ProblemText>{item.description}</ProblemText>\n              <Date>{item.createdFormattedDate}</Date>\n            </Problem>\n          )}\n        />\n        )}\n    </Container>\n  );\n}\n\nViewProblem.navigationOptions = ({navigation}) => ({\n  headerTitle: () => <Header title=\"Visualizar problemas\" border={true} />,\n  headerLeft: () => (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.goBack();\n      }}>\n      <Icon name=\"chevron-left\" size={20} color=\"#000\" />\n    </TouchableOpacity>\n  ),\n});\n"]},"metadata":{},"sourceType":"script"}