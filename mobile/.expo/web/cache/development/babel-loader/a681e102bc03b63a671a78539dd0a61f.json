{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _createNavigationAwareScrollable = _interopRequireDefault(require(\"./createNavigationAwareScrollable\"));\n\nvar _invariant = _interopRequireDefault(require(\"./utils/invariant\"));\n\nvar _jsxFileName = \"/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/@react-navigation/native/dist/Scrollables.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar WrappedScrollView;\n\nif (_reactNative.Platform.OS === 'android') {\n  WrappedScrollView = (0, _createNavigationAwareScrollable.default)(_reactNative.ScrollView);\n} else {\n  WrappedScrollView = (0, _createNavigationAwareScrollable.default)(_reactNativeGestureHandler.ScrollView);\n}\n\nfunction propsMaybeWithRefreshControl(props) {\n  var onRefresh = props.onRefresh;\n\n  if (onRefresh) {\n    (0, _invariant.default)(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n    return _objectSpread({}, props, {\n      refreshControl: props.refreshControl == null ? _react.default.createElement(_reactNative.RefreshControl, {\n        refreshing: props.refreshing,\n        onRefresh: onRefresh,\n        progressViewOffset: props.progressViewOffset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }) : props.refreshControl\n    });\n  } else {\n    return props;\n  }\n}\n\nvar WrappedFlatList = _react.default.forwardRef(function (props, ref) {\n  return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(props) {\n      return _react.default.createElement(WrappedScrollView, (0, _extends2.default)({}, propsMaybeWithRefreshControl(props), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }));\n});\n\nvar WrappedSectionList = _react.default.forwardRef(function (props, ref) {\n  return _react.default.createElement(_reactNative.SectionList, (0, _extends2.default)({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(props) {\n      return _react.default.createElement(WrappedScrollView, (0, _extends2.default)({}, propsMaybeWithRefreshControl(props), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    }\n  }));\n});\n\nmodule.exports = {\n  ScrollView: WrappedScrollView,\n  FlatList: WrappedFlatList,\n  SectionList: WrappedSectionList\n};","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/@react-navigation/native/dist/Scrollables.js"],"names":["WrappedScrollView","Platform","OS","ScrollView","GHScrollView","propsMaybeWithRefreshControl","props","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","WrappedFlatList","React","forwardRef","ref","WrappedSectionList","module","exports","FlatList","SectionList"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAIA,iBAAJ;;AACA,IAAIC,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAI7BF,EAAAA,iBAAiB,GAAG,8CAAgCG,uBAAhC,CAApB;AACD,CALD,MAKO;AACLH,EAAAA,iBAAiB,GAAG,8CAAgCI,qCAAhC,CAApB;AACD;;AAED,SAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3C,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;;AACA,MAAIA,SAAJ,EAAe;AACb,4BAAU,OAAOD,KAAK,CAACE,UAAb,KAA4B,SAAtC,EAAiD,sFAAsFC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACE,UAArB,CAAtF,GAAyH,GAA1K;AACA,6BACKF,KADL;AAEEK,MAAAA,cAAc,EAAEL,KAAK,CAACK,cAAN,IAAwB,IAAxB,GAA+B,6BAAC,2BAAD;AAAgB,QAAA,UAAU,EAAEL,KAAK,CAACE,UAAlC;AAA8C,QAAA,SAAS,EAAED,SAAzD;AAAoE,QAAA,kBAAkB,EAAED,KAAK,CAACM,kBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B,GAAsJN,KAAK,CAACK;AAF9K;AAID,GAND,MAMO;AACL,WAAOL,KAAP;AACD;AACF;;AAED,IAAMO,eAAe,GAAGC,eAAMC,UAAN,CAAiB,UAACT,KAAD,EAAQU,GAAR;AAAA,SAAgB,6BAAC,qBAAD;AAAU,IAAA,GAAG,EAAEA;AAAf,KAAwBV,KAAxB;AAA+B,IAAA,qBAAqB,EAAE,+BAAAA,KAAK;AAAA,aAAI,6BAAC,iBAAD,6BAAuBD,4BAA4B,CAACC,KAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;AAAA,CAAjB,CAAxB;;AAEA,IAAMW,kBAAkB,GAAGH,eAAMC,UAAN,CAAiB,UAACT,KAAD,EAAQU,GAAR;AAAA,SAAgB,6BAAC,wBAAD;AAAa,IAAA,GAAG,EAAEA;AAAlB,KAA2BV,KAA3B;AAAkC,IAAA,qBAAqB,EAAE,+BAAAA,KAAK;AAAA,aAAI,6BAAC,iBAAD,6BAAuBD,4BAA4B,CAACC,KAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;AAAA,CAAjB,CAA3B;;AAGAY,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,UAAU,EAAEH,iBADG;AAEfoB,EAAAA,QAAQ,EAAEP,eAFK;AAGfQ,EAAAA,WAAW,EAAEJ;AAHE,CAAjB","sourcesContent":["import React from 'react';\nimport { ScrollView, Platform, FlatList, SectionList, RefreshControl } from 'react-native';\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\nimport createNavigationAwareScrollable from './createNavigationAwareScrollable';\nimport invariant from './utils/invariant';\n\nlet WrappedScrollView;\nif (Platform.OS === 'android') {\n  // @todo: use GHScrollView again when\n  // https://github.com/kmagiera/react-native-gesture-handler/issues/560 has\n  // been fixed.\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\n} else {\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\n}\n\nfunction propsMaybeWithRefreshControl(props) {\n  const onRefresh = props.onRefresh;\n  if (onRefresh) {\n    invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n    return {\n      ...props,\n      refreshControl: props.refreshControl == null ? <RefreshControl refreshing={props.refreshing} onRefresh={onRefresh} progressViewOffset={props.progressViewOffset} /> : props.refreshControl\n    };\n  } else {\n    return props;\n  }\n}\n\nconst WrappedFlatList = React.forwardRef((props, ref) => <FlatList ref={ref} {...props} renderScrollComponent={props => <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />} />);\n\nconst WrappedSectionList = React.forwardRef((props, ref) => <SectionList ref={ref} {...props} renderScrollComponent={props => <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />} />);\n\n// eslint-disable-next-line import/no-commonjs\nmodule.exports = {\n  ScrollView: WrappedScrollView,\n  FlatList: WrappedFlatList,\n  SectionList: WrappedSectionList\n};"]},"metadata":{},"sourceType":"script"}