{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _core = require(\"@react-navigation/core\");\n\nvar _jsxFileName = \"/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/@react-navigation/native/dist/Themed.js\";\n\nvar ThemedText = function (_React$Component) {\n  (0, _inherits2.default)(ThemedText, _React$Component);\n\n  function ThemedText() {\n    (0, _classCallCheck2.default)(this, ThemedText);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ThemedText).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ThemedText, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_reactNative.Text, (0, _extends2.default)({}, this.props, {\n        style: [{\n          color: _core.ThemeColors[this.context].label\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        }\n      }));\n    }\n  }]);\n  return ThemedText;\n}(React.Component);\n\nThemedText.contextType = _core.ThemeContext;\n\nvar ThemedTextInput = function (_React$Component2) {\n  (0, _inherits2.default)(ThemedTextInput, _React$Component2);\n\n  function ThemedTextInput() {\n    (0, _classCallCheck2.default)(this, ThemedTextInput);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ThemedTextInput).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ThemedTextInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_reactNative.TextInput, (0, _extends2.default)({}, this.props, {\n        placeholderTextColor: this.context === 'dark' ? '#ebebf54c' : '#3c3c434c',\n        style: [{\n          color: _core.ThemeColors[this.context].label\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }));\n    }\n  }]);\n  return ThemedTextInput;\n}(React.Component);\n\nThemedTextInput.contextType = _core.ThemeContext;\n\nvar ThemedStatusBar = function (_React$Component3) {\n  (0, _inherits2.default)(ThemedStatusBar, _React$Component3);\n\n  function ThemedStatusBar() {\n    (0, _classCallCheck2.default)(this, ThemedStatusBar);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ThemedStatusBar).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ThemedStatusBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          barStyle = _this$props.barStyle,\n          props = (0, _objectWithoutProperties2.default)(_this$props, [\"barStyle\"]);\n      return React.createElement(_reactNative.StatusBar, (0, _extends2.default)({\n        barStyle: barStyle ? barStyle : this.context === 'dark' ? 'light-content' : 'default'\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }));\n    }\n  }]);\n  return ThemedStatusBar;\n}(React.Component);\n\nThemedStatusBar.contextType = _core.ThemeContext;\nvar _default = {\n  Text: ThemedText,\n  StatusBar: ThemedStatusBar,\n  TextInput: ThemedTextInput\n};\nexports.default = _default;","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/@react-navigation/native/dist/Themed.js"],"names":["ThemedText","props","color","ThemeColors","context","label","style","React","Component","contextType","ThemeContext","ThemedTextInput","ThemedStatusBar","barStyle","Text","StatusBar","TextInput"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;IAEMA,U;;;;;;;;;;6BAGK;AACP,aAAO,oBAAC,iBAAD,6BAAU,KAAKC,KAAf;AAAsB,QAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEC,kBAAY,KAAKC,OAAjB,EAA0BC;AAAnC,SAAD,EAA6C,KAAKJ,KAAL,CAAWK,KAAxD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;EALsBC,KAAK,CAACC,S;;AAAzBR,U,CACGS,W,GAAcC,kB;;IAOjBC,e;;;;;;;;;;6BAGK;AACP,aAAO,oBAAC,sBAAD,6BAAe,KAAKV,KAApB;AAA2B,QAAA,oBAAoB,EAAE,KAAKG,OAAL,KAAiB,MAAjB,GAA0B,WAA1B,GAAwC,WAAzF;AAAsG,QAAA,KAAK,EAAE,CAAC;AAAEF,UAAAA,KAAK,EAAEC,kBAAY,KAAKC,OAAjB,EAA0BC;AAAnC,SAAD,EAA6C,KAAKJ,KAAL,CAAWK,KAAxD,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;EAL2BC,KAAK,CAACC,S;;AAA9BG,e,CACGF,W,GAAcC,kB;;IAOjBE,e;;;;;;;;;;6BAGK;AAAA,wBACsB,KAAKX,KAD3B;AAAA,UACDY,QADC,eACDA,QADC;AAAA,UACYZ,KADZ;AAGP,aAAO,oBAAC,sBAAD;AAAW,QAAA,QAAQ,EAAEY,QAAQ,GAAGA,QAAH,GAAc,KAAKT,OAAL,KAAiB,MAAjB,GAA0B,eAA1B,GAA4C;AAAvF,SAAsGH,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;EAP2BM,KAAK,CAACC,S;;AAA9BI,e,CACGH,W,GAAcC,kB;eASR;AACbI,EAAAA,IAAI,EAAEd,UADO;AAEbe,EAAAA,SAAS,EAAEH,eAFE;AAGbI,EAAAA,SAAS,EAAEL;AAHE,C","sourcesContent":["import * as React from 'react';\nimport { StatusBar, Text, TextInput } from 'react-native';\nimport { ThemeContext, ThemeColors } from '@react-navigation/core';\n\nclass ThemedText extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    return <Text {...this.props} style={[{ color: ThemeColors[this.context].label }, this.props.style]} />;\n  }\n}\n\nclass ThemedTextInput extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    return <TextInput {...this.props} placeholderTextColor={this.context === 'dark' ? '#ebebf54c' : '#3c3c434c'} style={[{ color: ThemeColors[this.context].label }, this.props.style]} />;\n  }\n}\n\nclass ThemedStatusBar extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    let { barStyle, ...props } = this.props;\n\n    return <StatusBar barStyle={barStyle ? barStyle : this.context === 'dark' ? 'light-content' : 'default'} {...props} />;\n  }\n}\n\nexport default {\n  Text: ThemedText,\n  StatusBar: ThemedStatusBar,\n  TextInput: ThemedTextInput\n};"]},"metadata":{},"sourceType":"script"}