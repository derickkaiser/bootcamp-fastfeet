{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTabBarItemIOSComponent;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"./react-native\");\n\nvar _jsxFileName = \"/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js\";\nvar ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nvar SELECTED_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['selectedIconName', 'selectedIconColor']);\n\nvar arePropsEqual = function arePropsEqual(keys) {\n  return function (prevProps, nextProps) {\n    return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));\n  };\n};\n\nvar areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nvar areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nfunction createTabBarItemIOSComponent(IconNamePropType, getImageSource) {\n  var _class, _temp;\n\n  return _temp = _class = function (_PureComponent) {\n    (0, _inherits2.default)(TabBarItemIOS, _PureComponent);\n\n    function TabBarItemIOS() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, TabBarItemIOS);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TabBarItemIOS)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        icon: undefined,\n        selectedIcon: undefined\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(TabBarItemIOS, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.updateIconSource();\n        this.updateSelectedIconSource();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (!areIconPropsEqual(prevProps, this.props)) {\n          this.updateIconSource();\n        }\n\n        if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n          this.updateSelectedIconSource();\n        }\n      }\n    }, {\n      key: \"updateIconSource\",\n      value: function updateIconSource() {\n        var _this$props, iconName, iconSize, iconColor, icon;\n\n        return _regenerator.default.async(function updateIconSource$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;\n\n                if (!iconName) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 4;\n                return _regenerator.default.awrap(getImageSource(iconName, iconSize, iconColor));\n\n              case 4:\n                icon = _context.sent;\n                this.setState({\n                  icon: icon\n                });\n                _context.next = 9;\n                break;\n\n              case 8:\n                if (this.state.icon) {\n                  this.setState({\n                    icon: undefined\n                  });\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"updateSelectedIconSource\",\n      value: function updateSelectedIconSource() {\n        var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;\n\n        return _regenerator.default.async(function updateSelectedIconSource$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props2 = this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;\n\n                if (!(selectedIconName || selectedIconColor)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _regenerator.default.awrap(getImageSource(selectedIconName || iconName, iconSize, selectedIconColor || iconColor));\n\n              case 4:\n                selectedIcon = _context2.sent;\n                this.setState({\n                  selectedIcon: selectedIcon\n                });\n                _context2.next = 9;\n                break;\n\n              case 8:\n                if (this.state.selectedIcon) {\n                  this.setState({\n                    selectedIcon: undefined\n                  });\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.TabBarIOS.Item, (0, _extends2.default)({}, this.state, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          }\n        }));\n      }\n    }]);\n    return TabBarItemIOS;\n  }(_react.PureComponent), _class.propTypes = {\n    iconName: IconNamePropType.isRequired,\n    selectedIconName: IconNamePropType,\n    iconSize: _propTypes.default.number,\n    iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    selectedIconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }, _class.defaultProps = {\n    iconSize: 30\n  }, _temp;\n}","map":{"version":3,"sources":["/Users/derickkaiser/Documents/Bootcamp2019/bootcamp-fastfeet/mobile/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js"],"names":["ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","state","icon","undefined","selectedIcon","updateIconSource","updateSelectedIconSource","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","PureComponent","propTypes","isRequired","PropTypes","number","oneOfType","string","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      selectedIconColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}